// even fibbonaci numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function Fibonacci (limit = 10) {
  let array = [1, 2]
  let prev = 1
  let next = 2
  let current
  for (i = 0; i < limit - 2; i++) {
    current = prev + next
    array.push(current)
    prev = next
    next = current
  }
  return array.filter(value => value <= 4000000)
}

function sumEvenFibbonacciNumbers (limit) {
  return Fibonacci(limit)
    .filter((v, i, a) => v % 2 === 0)
    .reduce(
      (previousValue, currentValue) =>
        BigInt(previousValue) + BigInt(currentValue)
    )
    .toString()
}

console.log({
  output: sumEvenFibbonacciNumbers(4000000),
  Fibonacci: Fibonacci(10)
})

//TODO: function is working.  Need to figure out how to work with BigInt
